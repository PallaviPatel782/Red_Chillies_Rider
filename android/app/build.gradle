apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.red_chillies_rider"

    defaultConfig {
        applicationId "com.red_chillies_rider"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    // ✅ Split APK configuration
    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            universalApk false 
        }
        density {
            enable false 
        }
    }

    // ✅ Optional: unique version codes per ABI
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def versionCodes = ["armeabi-v7a": 1, "arm64-v8a": 2, "x86": 3, "x86_64": 4]
            def abiFilter = output.getFilter(com.android.build.OutputFile.ABI)
            if (abiFilter != null) {
                output.versionCodeOverride = defaultConfig.versionCode * 10 + versionCodes.get(abiFilter)
            }
        }
    }

    // ✅ Custom APK naming
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def appName = "RedChilliesRider"
            def versionName = variant.versionName
            def buildType = variant.buildType.name

            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            if (abi == null) {
                abi = "universal"
            }

            output.outputFileName = "${appName}-v${versionName}-${abi}-${buildType}.apk"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file('../../node_modules/react-native-vector-icons/fonts.gradle')
